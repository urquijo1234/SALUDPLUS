package Vistas;

import Modelo.Cola;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.awt.Image;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Lobby extends javax.swing.JFrame {
 
    DefaultTableModel modelo = new DefaultTableModel();
    private Cola<String> colaEspera; // Agrega esta variable para mantener la cola de espera
    // HashMap para mantener un registro de la cantidad de citas generadas por especialidad
    private HashMap<String, Integer> contadorCitasPorEspecialidad;
    
    public Lobby(Cola<String> colaEspera) {
        initComponents();
        this.setLocationRelativeTo(this);
        cargarDatosEnCombobox(cbo_box_pacientes, "D:\\Usuario\\Documents\\NetBeansProjects\\SALUDPLUS\\Pacientes.txt");
        titulosTabla();
        contadorCitasPorEspecialidad = new HashMap<>();
        this.colaEspera = colaEspera; // Inicializa la cola de espera
                pintarImagen(label_logo1, "D:\\Usuario\\Documents\\NetBeansProjects\\SALUDPLUS\\src\\main\\java\\resources\\logo1.png");
      

    }
    
    public Lobby() {
        initComponents();
         this.setLocationRelativeTo(this);
        cargarDatosEnCombobox(cbo_box_pacientes, "D:\\Usuario\\Documents\\NetBeansProjects\\SALUDPLUS\\Pacientes.txt");
        titulosTabla();
        contadorCitasPorEspecialidad = new HashMap<>();
        this.colaEspera = colaEspera; // Inicializa la cola de espera
        pintarImagen(label_logo1, "D:\\Usuario\\Documents\\NetBeansProjects\\SALUDPLUS\\src\\main\\java\\resources\\logo1.png");
    }
  
    
    DefaultTableModel model;
    String paciente = "";
    String especialidad = "";
    String profesional = "";
    String motivo = "";
    int costo;
    String ticket = "";
    String flag = "";
    
    public void titulosTabla() {
        model = (DefaultTableModel) jTable1.getModel();
        Object[] titulos = new Object[]{"Paciente", "Especialidad", "Profesional", "Motivo", "Costo", "  Ticket", "Estado"};
        model.setColumnIdentifiers(titulos);
    }

    
    
    private void pintarImagen(JLabel lbl, String ruta){
     ImageIcon image = new ImageIcon(ruta);
     Icon icon = new ImageIcon(image.getImage().getScaledInstance(lbl.getWidth(), lbl.getHeight(), Image.SCALE_DEFAULT));
     lbl.setIcon(icon);
     this.repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        buttonGroup10 = new javax.swing.ButtonGroup();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        buttonGroup11 = new javax.swing.ButtonGroup();
        jMenuItem2 = new javax.swing.JMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        buttonGroup12 = new javax.swing.ButtonGroup();
        buttonGroup13 = new javax.swing.ButtonGroup();
        buttonGroup14 = new javax.swing.ButtonGroup();
        buttonGroup15 = new javax.swing.ButtonGroup();
        buttonGroup16 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        label_logo1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        boton_registro = new javax.swing.JButton();
        boton_taquilla = new javax.swing.JButton();
        boton_llamado = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        combobox_especialidades = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        combobox_profesionales = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        radioboton_valoracion = new javax.swing.JRadioButton();
        radioboton_examen = new javax.swing.JRadioButton();
        radioboton_control = new javax.swing.JRadioButton();
        boton_solicitud = new javax.swing.JButton();
        cbo_box_pacientes = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        campo_cola_de_espera_lobby = new javax.swing.JTextArea();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("jRadioButtonMenuItem2");

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        label_logo1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        label_logo1.setForeground(new java.awt.Color(51, 153, 255));
        label_logo1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setText("Modulo de Gestion de citas");

        boton_registro.setText("REGISTRAR OTRO PACIENTE");
        boton_registro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_registroActionPerformed(evt);
            }
        });

        boton_taquilla.setText("GESTION DE PAGOS Y EXAMENES");
        boton_taquilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_taquillaActionPerformed(evt);
            }
        });

        boton_llamado.setText("LLAMADO DE PACIENTES");
        boton_llamado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_llamadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boton_registro)
                    .addComponent(label_logo1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(boton_taquilla)
                        .addGap(68, 68, 68)
                        .addComponent(boton_llamado))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(29, 29, 29))
                    .addComponent(label_logo1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_registro)
                    .addComponent(boton_llamado)
                    .addComponent(boton_taquilla))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel3.setText("Seleccione al paciente:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel4.setText("Especialidad Requerida:");

        combobox_especialidades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MEDICINA GENERAL", "PEDIATRIA", "OTORRINOLARINGOLOGIA", "NEUMOLOGO", "CARDIOLOGO", "ALERGOLOGO", "FISIATRIA", "NEUROLOGIA", "OTOLOGIA", "OFTALMOLOGIA", "PSICOLOGIA", "GINECOLOGIA", "ANESTESIOLOGIA", "INTERNISTA" }));
        combobox_especialidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_especialidadesActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel5.setText("Profesional Asignado:");

        combobox_profesionales.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "JOSEPH URQUIJO", "JUAN GUERRERO", "JUAN MARIÑO", "URBANO GOMEZ", "DIEGO PARADA", "LENIN SERRANO", "DANITH SOLORZANO", "AUDO ALI", "LENIN SERRANO", "DIANA FLOREZ", " " }));
        combobox_profesionales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_profesionalesActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel6.setText("Motivo de la Cita:");

        buttonGroup1.add(radioboton_valoracion);
        radioboton_valoracion.setText("Valoracion");
        radioboton_valoracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioboton_valoracionActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioboton_examen);
        radioboton_examen.setText("Examen");
        radioboton_examen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioboton_examenActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioboton_control);
        radioboton_control.setText("Control");
        radioboton_control.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioboton_controlActionPerformed(evt);
            }
        });

        boton_solicitud.setBackground(new java.awt.Color(153, 255, 51));
        boton_solicitud.setText("SOLICITAR CITA");
        boton_solicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_solicitudActionPerformed(evt);
            }
        });

        cbo_box_pacientes.setToolTipText("Seleccione el paciente:");

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setEnabled(false);
        jScrollPane2.setViewportView(jTable1);

        jLabel7.setText("COLA ESPERA");

        campo_cola_de_espera_lobby.setBackground(new java.awt.Color(255, 255, 255));
        campo_cola_de_espera_lobby.setColumns(20);
        campo_cola_de_espera_lobby.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        campo_cola_de_espera_lobby.setRows(5);
        campo_cola_de_espera_lobby.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        campo_cola_de_espera_lobby.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        campo_cola_de_espera_lobby.setEnabled(false);
        jScrollPane1.setViewportView(campo_cola_de_espera_lobby);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbo_box_pacientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(80, 80, 80)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(combobox_especialidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(combobox_profesionales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(boton_solicitud))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioboton_valoracion)
                            .addComponent(jLabel6)
                            .addComponent(radioboton_examen)
                            .addComponent(radioboton_control)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radioboton_valoracion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioboton_examen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioboton_control)
                            .addComponent(boton_solicitud)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(combobox_especialidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(combobox_profesionales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbo_box_pacientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_registroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_registroActionPerformed
        //volver al frame de registro 

        // Iniciar sesión
        Register registro = new Register();
        JOptionPane.showMessageDialog(this, "Volviendo a Registro");
        this.dispose();
        registro.setLocationRelativeTo(null);
        registro.setVisible(true);

    }//GEN-LAST:event_boton_registroActionPerformed
    
    private void cargarDatosEnCombobox(JComboBox<String> comboBox, String filePath) {
        File file = new File(filePath);
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            String line;
            while ((line = br.readLine()) != null) {
                comboBox.addItem(line);
            }
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(Lobby.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    private void combobox_profesionalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_profesionalesActionPerformed
       
    }//GEN-LAST:event_combobox_profesionalesActionPerformed

    private void radioboton_examenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioboton_examenActionPerformed
       
    }//GEN-LAST:event_radioboton_examenActionPerformed

    private void radioboton_controlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioboton_controlActionPerformed
    
    }//GEN-LAST:event_radioboton_controlActionPerformed

    private void radioboton_valoracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioboton_valoracionActionPerformed
      
    }//GEN-LAST:event_radioboton_valoracionActionPerformed
    
    public DefaultTableModel obtenerTabla() {
        return (DefaultTableModel) jTable1.getModel();
    }
    

    private void boton_taquillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_taquillaActionPerformed
        // Verificar si hay elementos en la cola de espera
        if (!campo_cola_de_espera_lobby.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Hay citas en la cola de espera. Ingrese al modulo de llamado", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Si no hay elementos en la cola de espera, ir a la taquilla
        Gestion taquillaTabla = new Gestion(obtenerTabla());
        taquillaTabla.restaurarContenidoCola(getContenidoColaEspera()); // Asegurarse de que se restaure el contenido del TextArea
        JOptionPane.showMessageDialog(this, "Ingresando al modulo de gestion de pagos y examenes");
        this.dispose();
        taquillaTabla.setLocationRelativeTo(null);
        taquillaTabla.setVisible(true);

    }//GEN-LAST:event_boton_taquillaActionPerformed
    
    public void agregarContenidoColaEspera(String nuevoContenido) {
        campo_cola_de_espera_lobby.append(nuevoContenido);
    }
    private void boton_solicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_solicitudActionPerformed
        
        paciente = (String) cbo_box_pacientes.getSelectedItem().toString();
        especialidad = combobox_especialidades.getSelectedItem().toString();
        if (combobox_especialidades.getSelectedItem().equals("MEDICINA GENERAL")) {
            costo = (int) 40000;
        } else if (combobox_especialidades.getSelectedItem() != "MEDICINA GENERAL") {
            costo = (int) 60000;
        }
        profesional = combobox_profesionales.getSelectedItem().toString();
        if (radioboton_control.isSelected()) {
            motivo = "Control";
            flag = "Pago(gratuito)";
            costo = 0;
        } else if (radioboton_examen.isSelected()) {
            motivo = "Examen";
            costo = -1;
            
        } else if (radioboton_valoracion.isSelected()) {
            motivo = "Valoracion";
        }
        generadorTicket();
        
        if (motivo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No seleccionaste motivo de la cita", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (radioboton_examen.isSelected()) {
            flag
                    = "NULL PASE POR REGISTRO";
        } else {
            flag = "NO PAGO";
        }
        
        model.addRow(new Object[]{paciente, especialidad, profesional, motivo, costo, ticket, flag});
        

    }//GEN-LAST:event_boton_solicitudActionPerformed
    public void generadorTicket() {
        String especialidad = (String) combobox_especialidades.getSelectedItem();
        String ticketPrefix = "";
        
        if (especialidad.equals("MEDICINA GENERAL")) {
            ticketPrefix = "MG";
        } else if (especialidad.equals("PEDIATRIA")) {
            ticketPrefix = "PED";
        } else if (especialidad.equals("OTORRINOLARINGOLOGIA")) {
            ticketPrefix = "OTO";
        } else if (especialidad.equals("NEUMOLOGO")) {
            ticketPrefix = "NEU";
        } else if (especialidad.equals("CARDIOLOGO")) {
            ticketPrefix = "CAR";
        } else if (especialidad.equals("ALERGOLOGO")) {
            ticketPrefix = "ALE";
        } else if (especialidad.equals("FISIATRIA")) {
            ticketPrefix = "FIS";
        } else if (especialidad.equals("NEUROLOGIA")) {
            ticketPrefix = "NEU";
        } else if (especialidad.equals("OTOLOGIA")) {
            ticketPrefix = "OTO";
        } else if (especialidad.equals("OFTALMOLOGIA")) {
            ticketPrefix = "OFT";
        } else if (especialidad.equals("PSICOLOGIA")) {
            ticketPrefix = "PSI";
        } else if (especialidad.equals("GINECOLOGIA")) {
            ticketPrefix = "GIN";
        } else if (especialidad.equals("ANESTESIOLOGIA")) {
            ticketPrefix = "ANE";
        } else if (especialidad.equals("INTERNISTA")) {
            ticketPrefix = "INT";
        }
        
        if (radioboton_control.isSelected()) {
            ticket = "CONT_" + ticketPrefix;
        } else if (radioboton_examen.isSelected()) {
            ticket = "EXA_" + ticketPrefix;
        } else if (radioboton_valoracion.isSelected()) {
            ticket = "VAL_" + ticketPrefix;
        } else {
            // Manejar el caso en que no se haya seleccionado ningún radiobutton
            ticket = ticketPrefix;
        }

        // Obtener el número de secuencia para esta especialidad
        int secuencia = obtenerNumeroSecuencia(especialidad);

        // Generar el ticket con el formato especificado
        ticket = ticket + String.format("%03d", secuencia);
        
    }
    
    private int obtenerNumeroSecuencia(String especialidad) {
        // Verificar si ya se ha generado un ticket para esta especialidad
        if (contadorCitasPorEspecialidad.containsKey(especialidad)) {
            // Obtener el contador actual y aumentarlo en 1
            int contador = contadorCitasPorEspecialidad.get(especialidad);
            contador++;
            contadorCitasPorEspecialidad.put(especialidad, contador);
            return contador;
        } else {
            // Si no se ha generado un ticket para esta especialidad, inicializar el contador en 1
            contadorCitasPorEspecialidad.put(especialidad, 1);
            return 1;
        }
    }
    
    public void setContenidoColaEspera(String contenido) {
        campo_cola_de_espera_lobby.setText(contenido);
    }
    
    public String getContenidoColaEspera() {
        return campo_cola_de_espera_lobby.getText();
    }
    
    private void combobox_especialidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_especialidadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combobox_especialidadesActionPerformed

    private void boton_llamadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_llamadoActionPerformed
        
        
        
        Llamado llamadoframe = new Llamado(getContenidoColaEspera());
        this.dispose();
        llamadoframe.setLocationRelativeTo(null);
        llamadoframe.setVisible(true);
    }//GEN-LAST:event_boton_llamadoActionPerformed

    
    public DefaultTableModel guardarTabla() {
    return (DefaultTableModel) jTable1.getModel();
}    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lobby.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lobby().setVisible(true);
            }
        });
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_llamado;
    private javax.swing.JButton boton_registro;
    private javax.swing.JButton boton_solicitud;
    private javax.swing.JButton boton_taquilla;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.ButtonGroup buttonGroup11;
    private javax.swing.ButtonGroup buttonGroup12;
    private javax.swing.ButtonGroup buttonGroup13;
    private javax.swing.ButtonGroup buttonGroup14;
    private javax.swing.ButtonGroup buttonGroup15;
    private javax.swing.ButtonGroup buttonGroup16;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JTextArea campo_cola_de_espera_lobby;
    private javax.swing.JComboBox<String> cbo_box_pacientes;
    private javax.swing.JComboBox<String> combobox_especialidades;
    private javax.swing.JComboBox<String> combobox_profesionales;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel label_logo1;
    private javax.swing.JRadioButton radioboton_control;
    private javax.swing.JRadioButton radioboton_examen;
    private javax.swing.JRadioButton radioboton_valoracion;
    // End of variables declaration//GEN-END:variables
}
